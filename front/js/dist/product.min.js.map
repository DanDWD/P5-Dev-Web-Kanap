{"version":3,"sources":["product.js"],"names":["getProductId","url","window","location","href","URL","search","params","has","get","alert","getProductData","productId","response","regeneratorRuntime","async","_context","prev","next","awrap","fetch","concat","sent","json","abrupt","t0","stop","addProductToCart","id","data","document","querySelector","value","getElementById","textContent","colors","errorMessage","quantity","htmlContentItem","color","selection","parse","localStorage","getItem","cart","setItem","JSON","stringify","some","y","duplicateIndex","findIndex","e","parseFloat","push","colorRender","_context2","name","price","description","innerHTML","imageUrl","altTxt","forEach","item","displayProducts","addEventListener","_id"],"mappings":"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","file":"product.min.js","sourcesContent":["//----recuperer l'id dans l'url\r\nfunction getProductId () {\r\n    //recuperer l'url\r\n    let url = new URL(window.location.href);\r\n    //recuperer les parametres dans l'url\r\n    let params = new URLSearchParams(url.search);\r\n    \r\n        //recuperation du parametre id\r\n        if (params.has('id')) {\r\n            let id = params.get('id');\r\n            return id;\r\n        }\r\n        else {\r\n            alert(\"Erreur : impossible de récupérer l'identifiant dans l'url\");\r\n        }\r\n    }\r\n    \r\n    //----retourner les caracteristiques des articles sur l'api\r\n    async function getProductData () {\r\n        const productId = getProductId ();\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/api/products/${productId}`);\r\n            //convertion au format json    \r\n            return await response.json();\r\n            }\r\n        catch (e) {\r\n            alert(\"Erreur. L'API est injoinable\" + e );\r\n        }\r\n    };\r\n      \r\n    //----afficher le produit\r\n    (async function displayProducts() {\r\n        let data = await getProductData ();\r\n        document.getElementById('title').textContent = data.name;\r\n        document.getElementById('price').textContent = data.price;\r\n        document.getElementById('description').textContent = data.description;\r\n        document.querySelector('.item__img').innerHTML = `\r\n            <img src=\"${data.imageUrl}\" alt=\"${data.altTxt}\">\r\n        `;\r\n        //choix de la couleur\r\n        let colors = data.colors;\r\n        //rendu\r\n        let colorRender = '';\r\n        colors.forEach(item => {\r\n            let htmlContentItem = `\r\n                <option value=\"${item}\">${item}</option>\r\n            `;\r\n            //placer le rendu en memoire\r\n            colorRender = colorRender+htmlContentItem;\r\n        });\r\n        //injecter le rendu dans l'html \r\n        document.getElementById(\"colors\").innerHTML += colorRender;\r\n        document.getElementById(\"addToCart\").addEventListener(\"click\", (e) => {\r\n    \r\n            addProductToCart(data._id);\r\n        \r\n        })\r\n    })();\r\n\r\n//----ajouter le(s) produit(s) dans le panier\r\nfunction addProductToCart(id){\r\n    //recuperation de la couleur  \r\n    const color = document.querySelector(\"#colors\").value;\r\n    //recuperation de la quantité\r\n    const quantity = document.querySelector(\"#quantity\").value;\r\n    //possibles erreurs\r\n    let errorMessage = \"\";\r\n\r\n    if(!id){\r\n        errorMessage += \"il manque l'identifiant produit\\n\"\r\n    }\r\n\r\n    if (quantity < 1 || quantity > 100) {\r\n        errorMessage += \"Quantité non séléctionnée !\\n\";\r\n    }\r\n\r\n    if(color == \"\"){\r\n        errorMessage += \"Couleur non séléctionnée !\\n\";\r\n    }\r\n    \r\n    if(errorMessage !== \"\"){\r\n       alert(errorMessage);\r\n    }else{\r\n        \r\n        let selection = {\r\n            id,\r\n            color,\r\n            quantity,    \r\n        }\r\n        \r\n         //si la quantite enregistree est comprise entre 1 et 100\r\n         let cart = JSON.parse(localStorage.getItem(\"panier\"));\r\n    \r\n         //si le panier n'existe pas\r\n         if (cart == null) {\r\n             //on cree le panier et on le stock en localstorage\r\n             let cart = [selection];\r\n             localStorage.setItem(\"panier\", JSON.stringify(cart));\r\n\r\n         //tester si il y a un doublon dans le tableau\r\n         } else if (cart.some(y =>\r\n             y.id === selection.id &&\r\n             y.color === selection.color) == true) {\r\n                 //on prend son index\r\n                 const duplicateIndex = cart.findIndex(e =>\r\n                     e.id === selection.id &&\r\n                     e.color === selection.color);\r\n                 //addition de la valeur initiale du panier + la selection\r\n                 cart[duplicateIndex].quantity = parseFloat(cart[duplicateIndex].quantity) + parseFloat(selection.quantity);\r\n                 //mise a jour du panier en ls\r\n                 localStorage.setItem(\"panier\", JSON.stringify(cart));\r\n\r\n         //si l'element n'est pas dans un panier\r\n         } else {\r\n             //envoyer directement la selection au panier\r\n             cart.push(selection);\r\n             localStorage.setItem(\"panier\", JSON.stringify(cart));\r\n         };\r\n\r\n         alert(`${selection.quantity} article(s) ${selection.color} ajoute(s) dans le panier`);\r\n        }     \r\n}"]}