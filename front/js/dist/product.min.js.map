{"version":3,"sources":["product.js"],"names":["paramsUrl","URLSearchParams","document","location","search","articleId","get","displayArticleInfos","articleInfos","getElementById","textContent","name","price","description","imageUrl","colors","renderColor","newHtml","concat","color","innerHTML","fetch","then","response","json","console","article","quantity","_classCallCheck","this","addToCart","button","querySelector","colorSelected","quantitySelected","addEventListener","event","selected","product","value","inCart","JSON","parse","localStorage","getItem","setItem","stringify","some","i","id","duplicateId","cart","findIndex","e","alert"],"mappings":"yHACA,IAAIA,UAAY,IAAIC,gBAAgBC,SAASC,SAASC,QAClDC,UAAYL,UAAUM,IAAI,MAUzB,SAELC,oBAAAC,GAEIN,SAASO,eAAe,SAASC,YAAcF,EAAaG,KADhET,SAASK,eAAT,SAA6BC,YAAcA,EAAAI,MACvCV,SAASO,eAAe,eAASC,YAAcF,EAA/CK,YACAX,SAASO,cAAe,cAASC,UAAjCR,uBAAAA,OACSO,EAAeK,SADxBZ,WAAAA,OACuCQ,EAAcF,OADrDN,MAMA,IAAIa,EAASP,EAAaO,OAKpBC,EAAS,GAGXA,EAAAA,QAAcA,SAAAA,GAGlB,IAAAC,EAAA,gCAAAC,OAJyBC,EAIzB,MAAAD,OAJmCC,EAInC,aACAjB,GAAAe,IAAAf,SAASO,eAAe,UAAUW,UAAYJ,EAlClDK,MAAIrB,sCAAAA,OAAwCK,YAO3CiB,KAAM,SAACC,GAAD,OAAcA,EAASC,SAHzBF,KAAA,SAAAd,GAGEiB,QAACF,MAAAA,GAADhB,oBAAAC,SAiCDkB,QACA,SAAAA,EAAaP,EAAbA,EAAAQ,GAAAC,gBAAAC,KAAAH,GACAG,KAAKF,UAAWA,EADhBE,KAAKV,MAAQA,EACbU,KAAKF,SAAWA,GAKtB,SAASG,YAEL,IAAMC,EAAS7B,oBAAuBM,cAAhCuB,EAAS7B,SAAS8B,cAAc,cAChCC,EAAgB/B,SAAS8B,cAAc,WACvCE,EAAmBhC,SAAS8B,cAAc,aAGhDD,EAAOI,iBAAiB,QAAS,SAACC,GAA5BA,EAACD,iBAIH,IAAIE,EAAW,IAAIC,QAAfD,EAAeC,IAEfL,EAAcM,MAIdF,OAASV,EAAiBU,QAA9B,GAAyB,GAArBA,EAASV,UAAiBU,EAASV,UAAY,IAAK,CAGhDa,IAAMA,EAAVC,KAAoBC,MAAAC,aAAAC,QAAA,gBACZJ,GAAUH,MAAVG,EAAJ,CAAA,IAAIA,EAAS,CAACH,GACdM,aAAqBE,QAAA,cAAoBC,KAAAA,UAAzCN,SAEwB,GAAJ,GAAIA,EAAAO,KAAA,SAAAC,GAAA,OACxBA,EAAAC,KAASZ,EACTW,IAFoBA,EAAA7B,QAAAkB,EAAAlB,QAAA,CAEiB,IAAA+B,EAAAC,KAAAC,UAAA,SAAAC,GAAA,OAChBA,EAAGF,KAAKC,EAAUH,IAAKI,EAAAlC,QAAAkB,EAAAlB,QACpCgC,KAASd,GACPlB,SAAUkB,KAAAA,GAASlB,SAAAA,EAAAA,SAFWwB,aAAAE,QAAA,cAAAJ,KAAAK,UAAAK,YAG/BD,KAAAA,KAAavB,WAItBgB,aAAaE,QAAQ,cAAeJ,KAAKK,UAAUK,YAF9CG,MAAA","file":"product.min.js","sourcesContent":["//----recuperation de l'url\r\nlet paramsUrl = new URLSearchParams(document.location.search);\r\nlet articleId = paramsUrl.get(\"id\"); // recuperation de l'id\r\n\r\n//----recuperation des differentes infos des articles dans l'api\r\nfetch(`http://localhost:3000/api/products/${articleId}`)\r\n\r\n//----conversion format json, renommage\r\n.then ((response) => response.json())\r\n    .then((articleInfos) => {   \r\n        console.table(articleInfos);\r\n        displayArticleInfos(articleInfos); // appel de la fonction\r\n    })\r\n\r\n//----insertion des information produits dans le code \r\nfunction displayArticleInfos(articleInfos) {\r\n    document.getElementById(\"title\").textContent = articleInfos.name;\r\n    document.getElementById(\"price\").textContent = articleInfos.price;\r\n    document.getElementById(\"description\").textContent = articleInfos.description;\r\n    document.querySelector(\".item__img\").innerHTML = `\r\n        <img src=\"${articleInfos.imageUrl}\" alt=\"${articleInfos.altTxt}\">`;\r\n    \r\n    //----choix des couleurs\r\n    let colors = articleInfos.colors;\r\n\r\n    //----creation d'un rendu\r\n    let renderColor = \"\";\r\n\r\n    colors.forEach(color => {\r\n        let newHtml = `\r\n            <option value=\"${color}\">${color}</option>`;\r\n        renderColor = renderColor+newHtml; // stocker le rendu en memoire\r\n    });\r\n\r\n    //----l'html est injecte dans le code\r\n    document.getElementById(\"colors\").innerHTML = renderColor;\r\n};\r\n\r\n//----creation d'un modele qui servira pour les articles selectionnés\r\nclass article {\r\n    constructor(articleId, color, quantity) {\r\n      this.articleId = articleId;\r\n      this.color = color;\r\n      this.quantity = quantity;\r\n    }\r\n};\r\n\r\n//----recuperer le choix du prospect \r\nfunction addToCart(){\r\n    let articleData = displayArticleInfos(articleInfos); // article choisi\r\n    const button = document.querySelector(\"#addToCart\");     // ciblage sur le bouton d'ajout\r\n    const colorSelected = document.querySelector(\"#colors\");     // ciblage sur selection de la couleur\r\n    const quantitySelected = document.querySelector(\"#quantity\");     // ciblage sur selection de la quantité\r\n\r\n    //----ecoute du bouton d'ajout\r\n    button.addEventListener(\"click\", (event) => {\r\n        event.preventDefault(); // bloquer les evenements par defaut\r\n\r\n        //---Creation de l'objet de recuperation de la saisie de l'utilisateur\r\n        let selected = new product(\r\n            articleData._id,\r\n            colorSelected.value,\r\n            Number(quantitySelected.value)\r\n            );\r\n\r\n        if (selected.quantity >= 1 && selected.quantity <= 100) { // controle de la quantité 1=>100\r\n            let inCart = JSON.parse(localStorage.getItem(\"laSelection\")); // envoi de la selection vers localstorage\r\n    \r\n            if (inCart == null) { // si le panier n'a pas de valeur\r\n                let inCart = [selected]; // on lui en donne une\r\n                localStorage.setItem(\"laSelection\", JSON.stringify(inCart));\r\n\r\n            } else if (inCart.some(i => // verifier si l'article existe deja\r\n                i.id === selected.id &&\r\n                i.color === selected.color) == true) {\r\n                    const duplicateId = cart.findIndex(e => // on prend son id\r\n                        e.id === selected.id &&\r\n                        e.color === selected.color);\r\n                    cart[duplicateId].quantity = cart[duplicateId].quantity + selected.quantity; // et on additionne les deux valeurs\r\n                    localStorage.setItem(\"laSelection\", JSON.stringify(cart)); // enfin le panier se met a jour\r\n            } else { // si l'article est le premier de son genre\r\n                cart.push(selection);\r\n                localStorage.setItem(\"laSelection\", JSON.stringify(cart));\r\n            };\r\n        } else { // enfin si la quantité est inferieur ou superieur a [1-100]\r\n            alert(\"la quantité doit être comprise entre 1 et 100.\"); // envoyer un message d'avertissement au client\r\n        }\r\n    });\r\n};"]}